// EDJE Functional Sass
// - Single-file version
// - v2.4.0

@charset "UTF-8";

// Framework output settings
$output-framework: false !default;
$include-normalize: true;
$include-grid: true;
$include-tile: true;
$include-typography: true;
$include-visibility: true;


// ---------
// VARIABLE
// ---------

// Font Family
$font-family : -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";

$font-family-header : "Apple Garamond", "Baskerville", "Times New Roman", "Droid Serif", "Times","Source Serif Pro", serif;

$font-faces: ();


// Color
$main : #2196f3;
$main-dark : darken($main, 10%);
$main-light : lighten($main, 10%);

$sub  : #607d8b;
$sub-dark: darken($sub, 10%);
$sub-light: lighten($sub, 10%);

$gray : #e0e0e0;
$gray-light: #f3f6f8;
$gray-dark: #b0bcc4;

$color-link : #0366d6;
$color-link-hover : lighten($color-link, 10%);

$red : #f44336;
$yellow : #ffeb3b;
$green : #4caf50;
$blue: #2196f3;

$body-background: #fff;

// Media Query
$size-xs : 480px;
$size-s  : 767px;
$size-m  : 960px;
$size-l  : 1120px;

$below-xs: "max-width:#{ $size-xs }";
$above-xs: "min-width:#{ $size-xs + 1px }";
$below-s: "max-width:#{ $size-s }";
$above-s: "min-width:#{ $size-s + 1px }";
$below-m: "max-width:#{ $size-m }";
$above-m: "min-width:#{ $size-m + 1px }";
$below-l: "max-width:#{ $size-l }";
$above-l: "min-width:#{ $size-l + 1px }";

$below-nav-s: "max-width:#{ $size-s }"; // mobile navigation breakpoint
$above-nav-s: "min-width:#{ $size-s + 1px }";

$portrait: "orientation: portrait";
$landscape: "orientation: landscape";
$retina: "min-resolution: 192dpi";

// Global value
$g-radius : 4px;
$g-transition : all .25s ease-out;

// Typography
$font-color  : #222;
$font-passive : #888;
$font-weight : 400;
$font-line   : 1.65;
$font-size : 16px;

// Typography - Header
$header-color   : $font-color;
$header-weight  : 700;
$header-line    : 1.25;
$header-spacing : 0;
$header-transform : none;

$h1: (base: 42px, s: 30px);
$h2: (base: 36px, s: 26px);
$h3: (base: 30px, s: 22px);
$h4: (base: 24px, s: 20px);
$h5: (base: 20px, s: 18px);
$h6: (base: $font-size, s: $font-size);

// Typography List
$ul-parent : disc;
$ul-child  : circle;
$ol-parent : decimal;
$ol-child  : lower-alpha;

// Grid
$grid-columns : 12;
$grid-gap     : 20px;
$grid-rim     : 10px;
$grid-max-width : $size-l;

// Tile
$tile-max : 8;
$tile-gap : 20px;

// Shadow
$shadow-z0: 0 0.5px 2px rgba(black, .18), 0 1.5px 6px rgba(black, .08);
$shadow-z1: 0 1.5px 4px rgba(black, .24), 0 1.5px 6px rgba(black, .12);
$shadow-z2: 0 3px 12px rgba(black, .23), 0 3px 12px rgba(black, .16);
$shadow-z3: 0 6px 12px rgba(black, .23), 0 10px 40px rgba(black, .19);

$spinner_path: '../../../../../wp-admin/images/spinner.gif';

// ----------------
// FUNCTIONAL SASS
// ----------------

// If the CSS doesn't fit in any variable, put it here
$h-custom: (
  example-anim: ( animation: 1s fadeInUp 0s both ),
);

// Height
$h-height: (
  names: ( h: height ),
  values: (
    '-auto': auto,
    0: 0,
    25: 25%,
    33: calc(100% / 3),
    50: 50%,
    66: calc(100% / 1.5),
    75: 75%,
    100: 100%,
    100vh: 100vh,
  )
);


// Width
$h-width: (
  names: ( w: width ),
  values: (
    '-auto': auto,
    0: 0,
    10: 10%,
    20: 20%,
    25: 25%,
    30: 30%,
    33: calc(100% / 3),
    40: 40%,
    50: 50%,
    60: 60%,
    66: calc(100% / 1.5),
    70: 70%,
    75: 75%,
    80: 80%,
    90: 90%,
    100: 100%,
    100vw: 100vw,
  )
);


// Position Move
$h-position: (
  names: (
    top: top,
    right: right,
    bottom: bottom,
    left: left
  ),
  values: (
    0: 0,
    50: 50%,
    100: 100%,
    '-auto': auto,
  )
);


// Z-Index
$h-z-index: (
  names: ( z: z-index ),
  values: (
    '-1': -1,
    0: 0,
    2: 2,
    5: 5,
    10: 10,
    50: 50,
    100: 100,
  )
);


// Padding
$h-padding: (
  names: (
    p: padding,
    pv: ( padding-top, padding-bottom ),
    ph: ( padding-right, padding-left ),
    pt: padding-top,
    pr: padding-right,
    pb: padding-bottom,
    pl: padding-left,
  ),
  values: (
    0: 0,
    '025': 0.25rem,
    '05': 0.5rem,
    '075': 0.75rem,
    1: 1rem,
    125: 1.25rem,
    15: 1.5rem,
    2: 2rem,
    25: 2.5rem,
    3: 3rem,
    4: 4rem,
  ),
);

// Margin
$h-margin: (
  names: (
    m: margin,
    mv: ( margin-top, margin-bottom ),
    mh: ( margin-right, margin-left ),
    mt: margin-top,
    mr: margin-right,
    mb: margin-bottom,
    ml: margin-left,
  ),
  values: (
    '-auto': auto,
    0: 0,
    '025': 0.25rem,
    '05': 0.5rem,
    '075': 0.75rem,
    1: 1rem,
    125: 1.25rem,
    15: 1.5rem,
    2: 2rem,
    25: 2.5rem,
    3: 3rem,
    4: 4rem,
  )
);


// Border width
$h-border: (
  names: (
    b: border,
    bt: border-top,
    bl: border-left,
    br: border-right,
    bb: border-bottom,
  ),
  values: (
    '-none': none, // deprecated
    '0': 0,
    '1-solid': 1px solid,
    '1-dashed': 1px dashed,
    '2-solid': 2px solid,
    '2-dashed': 2px dashed,
  )
);


// Border color
$h-border-color: (
  names: ( bc-: border-color ),
  values: (
    main: $main,
    main-dark: $main-dark,
    main-light: $main-light,
    
    sub: $sub,
    sub-dark: $sub-dark,
    sub-light: $sub-light,
    'transparent': transparent,

    gray: $gray,
    gray-dark: $gray-dark,
    gray-light: $gray-light,

    'red': $red,
    'green': $green,
    'blue': $blue,
    'yellow': $yellow,

    'black': black,
    black75: rgba(black, .75),
    black50: rgba(black, .50),
    black25: rgba(black, .25),
    black10: rgba(black, .10),
    black05: rgba(black, .05),

    'white': white,
    white75: rgba(white, .75),
    white50: rgba(white, .50),
    white25: rgba(white, .25),
    white10: rgba(white, .10),
    white05: rgba(white, .05),
  )
);


// Border Radius
$h-border-radius: (
  br: ( border-radius: $g-radius ), // deprecated
  br-circle: ( border-radius: 50% ), // deprecated
  br-pill: ( border-radius: 999px ), // deprecated
  
  brad0: ( border-radius: 0 ),
  brad: ( border-radius: $g-radius ),
  brad-circle: ( border-radius: 50% ),
  brad-pill: ( border-radius: 999px ),
);


// Background Color
$h-background-color: (
  names: ( bg-: background-color ),
  values: (
    body: $body-background,
    'transparent': transparent,
    'inherit': inherit,
    
    main: $main,
    main75: rgba($main, .75),
    main50: rgba($main, .50),
    main25: rgba($main, .25),
    main10: rgba($main, .10),
    main05: rgba($main, .05),
    main-dark: $main-dark,
    main-light: $main-light,
    
    sub: $sub,
    sub-dark: $sub-dark,
    sub-light: $sub-light,
    
    gray: $gray,
    gray-dark: $gray-dark,
    gray-light: $gray-light,

    'red': $red,
    'blue': $blue,
    'yellow': $yellow,
    'green': $green,

    'black': black,
    black75: rgba(black, .75),
    black50: rgba(black, .50),
    black25: rgba(black, .25),
    black10: rgba(black, .10),
    black05: rgba(black, .05),

    'white': white,
    white75: rgba(white, .75),
    white50: rgba(white, .50),
    white25: rgba(white, .25),
    white10: rgba(white, .10),
    white05: rgba(white, .05),
  )
);


// Background Image - name can't be duplicate with BG Color
$h-background-image: (
  names: ( bg-: background-image ),
  values: ()
);


// Opacity
$h-opacity: (
  names: ( o: opacity ),
  values: (
    100: 1,
    90: .9,
    80: .8,
    70: .7,
    60: .6,
    50: .5,
    40: .4,
    30: .3,
    20: .2,
    10: .1,
    0: 0,
  )
);


// Box Shadow
$h-shadow: (
  names: ( shadow: box-shadow ),
  values: (
    0: $shadow-z0,
    1: $shadow-z1,
    2: $shadow-z2,
    3: $shadow-z3,
    '-none': none,
  )
);


// Hover Effect
$h-hover: (
  hover-dim: (
    ':hover': ( opacity: .6 ),
    ':active': ( opacity: .8 ),
  ),
  hover-grow: (
    ':hover': ( '-webkit-transform': scale(1.05), transform: scale(1.05) ),
    ':active': ( '-webkit-transform': scale(1), transform: scale(1) ),
  ),
  hover-u: ( ':hover': ( text-decoration: underline ) ),
);


// Transition
$h-transition: (
  transition: ( transition: $g-transition ),
  transition-none: ( transition: none ),
);


// Font Size
$h-font-size: (
  names: ( fs-: font-size ),
  values: (
    h1: '%h1',
    h2: '%h2',
    h3: '%h3',
    h4: '%h4',
    h5: '%h5',
    h6: '%h6',
    body: 1rem,
    s: 0.875em,
    m: 1.125em,
  ),
);


// Font Color
$h-color: (
  names: ( c-: color ),
  values: (
    body: $font-color,
    passive: $font-passive,
    link: $color-link,
    inherit: inherit,
    'transparent': transparent,

    main: $main,
    main75: rgba($main, .75),
    main50: rgba($main, .5),
    main-dark: $main-dark,
    main-light: $main-light,

    sub: $sub,
    sub-dark: $sub-dark,
    sub-light: $sub-light,

    'red': $red,
    'green': $green,
    'blue': $blue,
    'yellow': $yellow,

    'black': black,
    black75: rgba(black, .75),
    black50: rgba(black, .5),

    'white': white,
    white75: rgba(white, .75),
    white50: rgba(white, .5),
  ),
);


// Letter Spacing
$h-letter-spacing: (
  names: ( ls: letter-spacing ),
  values: (
    '-100': -0.1em,
    '-50': -0.05em,
    '-25': -0.025em,
    0: 0,
    25: 0.025em,
    50: 0.05em,
    75: 0.075em,
    100: 0.1em,
    150: 0.15em
  )
);


// Font Family
$h-font-family: (
  names: ( ff-: font-family ),
  values: (
    body: $font-family,
    header: $font-family-header
  )
);


// Line Height
$h-line-height: (
  names: ( lh-: line-height ),
  values: (
    base: 1,
    normal: normal,
    body: $font-line,
    header: $header-line,
  )
);

@import "edje/utility";
@import "edje/private-vars";
@import "edje/framework";